definitions:
  httpx.APIResponse:
    properties:
      data: {}
      error:
        type: string
      errors:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  post.DTO:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/user.DTO'
      version:
        type: integer
    type: object
  post.Form:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 255
        type: string
      user_id:
        type: string
    required:
    - content
    - title
    - user_id
    type: object
  user.DTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.Form:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /feed:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of posts based on user's preferences and
        filters
      parameters:
      - description: Number of items to return (default 20)
        in: query
        name: limit
        type: integer
      - description: Offset for pagination (default 0)
        in: query
        name: offset
        type: integer
      - description: 'Sort order: ''asc'' or ''desc'' (default ''desc'')'
        in: query
        name: sort
        type: string
      - collectionFormat: csv
        description: Filter by tags
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Search keyword in title/content
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.DTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Get user's personalized feed
      tags:
      - feed
  /posts:
    get:
      consumes:
      - application/json
      description: Get list of posts with optional filters
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Search query
        in: query
        name: q
        type: string
      - collectionFormat: csv
        description: Tags filter (a,b,c means OR)
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Exact title match
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.DTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: List all posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/post.Form'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/post.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Create a post
      tags:
      - Posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted message
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Delete post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: Get a single post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Get post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated post body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/post.Form'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Update post
      tags:
      - Posts
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all registered users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.DTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user with email and password
      parameters:
      - description: User form payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Form'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently remove a user by UUID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted message
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Delete user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Fetch a single user by their UUID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Form'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.APIResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httpx.APIResponse'
      summary: Update user by ID
      tags:
      - users
swagger: "2.0"
