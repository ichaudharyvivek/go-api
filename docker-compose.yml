services:
  app:
    build: .
    image: go-api-app
    env_file: .env
    volumes:
      - ./cmd:/app/cmd
      - ./internal:/app/internal
      - ./migrations:/app/migrations
      - ./docs:/app/docs
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    command:
      [
        'sh',
        '-c',
        "/app/bin/migrate up && echo 'Migration done' && air -c .air.toml",
      ]
    restart: always

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d app_db']
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  pgdata:
  redisdata:
